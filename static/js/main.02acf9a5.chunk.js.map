{"version":3,"sources":["constants/images/default.jpg","imgs/akinator.png","imgs/plastik.png","imgs/bumaga.png","imgs/steklo.png","components/questpannel/index.jsx","views/ProgressPage.jsx","components/akinator/index.jsx","views/Helper.jsx","constants/index.jsx","components/galaryitem/galaryitem.jsx","panels/guidereader/index.jsx","views/Guides.jsx","views/MyMap.jsx","App.js","index.js"],"names":["module","exports","QuestPanel","props","osname","platform","state","activePanel","progress","contextOpened","mode","changeProgress","bind","toggleContext","select","this","setState","e","currentTarget","dataset","requestAnimationFrame","val","newProgress","newValue","Math","min","max","id","aside","onClick","opened","onClose","before","asideContent","fill","data-mode","title","value","vertical","size","level","React","Component","ProgressPage","Akinator","className","clasName","src","akinator","Helper","guides","description","image","defaultImage","article","galleries","GalleryItem","style","height","align","slideWidth","map","idx","padding","width","maxWidth","alt","GuideReader","left","backClick","IOS","addon","guideID","Guides","currGuide","handleGuideClick","handleBackClick","guideNumber","item","key","img_size","img_offset","MyMap","isPlastic","isPaper","isGlases","buffer","changeSearch","getPointDataForGlases","getPointDataForPaper","getPointDataForPlastic","getPointOptionsForGlases","getPointOptionsForPaper","getPointOptionsForPlastic","hintContent","balloonContent","iconLayout","iconImageHref","img_plastik","iconImageSize","iconImageOffset","img_paper","img_glas","prop","notPlasitc","notPaper","notGlases","changeMap","j","properties","options","console","log","coordinates","geometry","printFromJson","pointsPlastic","pointsPapes","pointsGlases","defaultState","center","zoom","data","content","preset","groupByCoordinates","clusterDisableClickZoom","clusterHideIconOnBalloonOpen","geoObjectHideIconOnBalloonOpen","printPlacemark","App","activeStory","callBackYmaps","onStoryChange","entity","story","tabbar","selected","data-story","text","connect","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02acf9a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.b79a8f2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/akinator.49982d5a.png\";","module.exports = __webpack_public_path__ + \"static/media/plastik.68fc34b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bumaga.4552e1db.png\";","module.exports = __webpack_public_path__ + \"static/media/steklo.807c9cb0.png\";","import React from 'react';\nimport {\n    Panel,\n    Cell,\n    List,\n    PanelHeader,\n    Group,\n    Div,\n    InfoRow,\n    Progress,\n    Button,\n    FixedLayout,\n    FormLayout,\n    HeaderContext,\n    PanelHeaderContent,\n    HeaderButton,\n    IOS,\n    platform\n} from '@vkontakte/vkui';\nimport PropTypes from \"prop-types\";\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\n\nclass QuestPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.osname = platform();\n\n        this.state = {\n            activePanel: \"progress\",\n            progress: {'plastic': 40, 'glass': 40},\n            contextOpened: true,\n            mode: \"plastic\"\n        };\n\n        this.changeProgress = this.changeProgress.bind(this);\n        this.toggleContext = this.toggleContext.bind(this);\n        this.select = this.select.bind(this);\n    }\n\n    toggleContext() {\n        this.setState({contextOpened: !this.state.contextOpened});\n    }\n\n    select(e) {\n        const mode = e.currentTarget.dataset.mode;\n\n        this.setState({mode: mode});\n\n        requestAnimationFrame(this.toggleContext);\n    }\n\n    changeProgress(val) {\n        let newProgress = this.state.progress;\n        let newValue = newProgress[this.state.mode] + val;\n        newValue = Math.min(100, newValue);\n        newValue = Math.max(0, newValue);\n        newProgress[this.state.mode] = newValue;\n\n        this.setState({progress: newProgress});\n    }\n\n    render() {\n        return <Panel id={this.props.id}>\n            <PanelHeader>\n                <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\n                    {this.state.mode === 'plastic' ?  'Пластик' : 'Стекло'}\n                </PanelHeaderContent>\n            </PanelHeader>\n            <HeaderContext opened={this.state.contextOpened} onClose={this.toggleContext}>\n                <List>\n                    <Cell\n                        before={<Icon24Users />}\n                        asideContent={this.state.mode === \"plastic\" ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                        onClick={this.select}\n                        data-mode=\"plastic\"\n                    >\n                        Пластик\n                    </Cell>\n                    <Cell\n                        before={<Icon24Settings />}\n                        asideContent={this.state.mode === \"glass\" ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                        onClick={this.select}\n                        data-mode=\"glass\"\n                    >\n                        Стекло\n                    </Cell>\n                </List>\n            </HeaderContext>\n            <Group>\n                <Div>\n                    <InfoRow title=\"Прогресс озеленения\">\n                        <Progress value={this.state.progress[this.state.mode]}/>\n                    </InfoRow>\n                </Div>\n            </Group>\n\n            <FixedLayout vertical=\"bottom\">\n                <Group>\n                    <FormLayout>\n                        <Button size=\"xl\" level=\"secondary\" onClick={() => this.changeProgress(-10)}>\n                            Назад\n                        </Button>\n\n                        <Button size=\"xl\" level=\"secondary\" onClick={() => this.changeProgress(10)}>\n                            Вперёд\n                        </Button>\n                    </FormLayout>\n                </Group>\n            </FixedLayout>\n        </Panel>\n    }\n}\n\nQuestPanel.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n\nexport default QuestPanel;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormLayout, Button, Tabs, TabsItem, FixedLayout, Div, InfoRow, Panel, PanelHeader,  Group, View, Progress} from '@vkontakte/vkui';\nimport QuestPanel from \"../components/questpannel\";\n\nclass ProgressPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <View id={this.props.id} activePanel=\"progress\">\n        <QuestPanel id={'progress'}/>\n        </View>\n    }\n}\n\nProgressPage.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n\nexport default ProgressPage;","import React from 'react';\nimport  \"./styles.css\";\nimport \"../../styles/main.css\"\nimport akinator from '../../imgs/akinator.png';\n\n\nexport class Akinator extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <table className={'all_window'}>\n                <tr className={'upper-side'}>\n                    <div className={'top-container'}>\n                        <div className={'text-box'}>\n                            <div clasName={'text-styles dialog-colors'}>\n                                Привет!\n                            </div>\n                        </div>\n                        <div className={'image-box'}>\n                            <img src={akinator} className={'akinator-position'}/>\n                        </div>\n                    </div>\n\n                </tr>\n                <tr className={'lower-side'}>\n                    <div className={'relative-test'}>\n                        <div className={'test'}/>\n                    </div>\n                </tr>\n            </table>\n        );\n    }\n}\n\nexport default Akinator;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, Search, Group, Footer, List, Cell, View} from '@vkontakte/vkui';\nimport Akinator from \"../components/akinator\";\n\n\nconst Helper = props => (\n    <View id={props.id} activePanel=\"helper\">\n        <Panel id=\"helper\">\n            <PanelHeader>Помощник</PanelHeader>\n            <Akinator/>\n        </Panel>\n    </View>\n);\n\nHelper.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n\n\nexport default Helper;","import defaultImage from './images/default.jpg';\nimport React from 'react';\n\nexport const guides = [\n    {\n        id: 0,\n        title: \"Почему эта важно\",\n        description: \"Рассматривается статистика загрезнения пластиком\",\n        image: defaultImage,\n        article: <div>Теккккст</div>,\n    },\n    {\n        id: 1,\n        title: \"Виды пластика\",\n        description: \"Основные категории пластика с их описаниями\",\n        image: defaultImage,\n        article: \"\",\n    },\n];\n\nexport const galleries = [\n    {\n        title: 'Example',\n        guides: [0, 1, 1, 0, 1, 0],\n    },\n    {\n        title: 'Example1',\n        guides: [1, 0, 1, 0, 1, 0],\n    },\n    {\n        title: 'Example1',\n        guides: [1, 0, 1, 0, 1, 0],\n    },\n    {\n        title: 'Example1',\n        guides: [1, 0, 1, 0, 1, 0],\n    },\n];\n\nexport const questions = [\n    {\n        id: 0,\n        text: \"\",\n        answers: [\n            {\n                next_id: 1,\n                text: \"1\"\n            },\n            {\n                next_id: 2,\n                text: \"2\"\n            },\n            {\n                next_id: 3,\n                text: \"3\"\n            },\n            {\n                next_id: 4,\n                text: \"4\"\n            },\n        ]\n    }\n];","import React from 'react';\nimport './styles.css';\nimport {Panel, Cell, List, PanelHeader, Group, Div, Gallery} from '@vkontakte/vkui';\nimport {guides} from \"../../constants\";\n\nexport class GalleryItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Group title={this.props.title} style={{height: '40vh'}}>\n                <Gallery\n                    align='left'\n                    slideWidth='custom'\n                    style={{height: '100%'}}\n                >\n                    {\n                        this.props.guides.map(\n                            (idx) =>\n                                <div style={{padding: '0.7vh', width: '47vh'}}>\n                                    <img src={guides[idx].image} style={{maxWidth: '100%', height: 'auto'}}\n                                         alt='guide image' onClick={() => this.props.onClick(guides[idx].id)}/>\n                                </div>\n                        )\n                    }\n                </Gallery>\n            </Group>)\n    }\n}\n\nexport default GalleryItem;","import React from 'react';\nimport {HeaderButton, IOS, Panel, PanelHeader} from \"@vkontakte/vkui\";\nimport {guides} from \"../../constants\";\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport PropTypes from \"prop-types\";\n\n\nclass GuideReader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Panel id={\"reading\"}>\n            <PanelHeader\n                left=\n                    {\n                        <HeaderButton onClick={this.props.backClick}>\n                            {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                        </HeaderButton>\n                    }\n                addon=\n                    {\n                        <HeaderButton onClick={this.props.backClick}>\n                            Назад\n                        </HeaderButton>\n                    }\n            >\n                {\n                    guides[this.props.guideID].title\n                }\n            </PanelHeader>\n            {\n                guides[this.props.guideID].article\n            }\n        </Panel>\n    }\n}\n\nGuideReader.propTypes = {\n    id: PropTypes.string.isRequired,\n    guideID: PropTypes.number.isRequired,\n    backClick: PropTypes.func.isRequired\n};\n\nexport default GuideReader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Panel,\n    PanelHeader,\n    HeaderButton,\n    View,\n    IOS,\n    platform\n} from '@vkontakte/vkui';\n\nimport GalleryItem from \"../components/galaryitem/galaryitem\";\nimport GuideReader from \"../panels/guidereader\";\nimport {galleries, guides} from \"../constants\";\n\n\nexport class Guides extends React.Component {\n    constructor(props) {\n        super(props);\n        this.osname = platform();\n        this.state = {\n            activePanel: \"guides\",\n        };\n        this.currGuide = 0;\n\n        this.handleGuideClick = this.handleGuideClick.bind(this);\n        this.handleBackClick = this.handleBackClick.bind(this);\n    }\n\n    handleGuideClick(guideNumber) {\n        this.setState({activePanel: 'reading'});\n        this.currGuide = guideNumber;\n    }\n\n    handleBackClick() {\n        this.setState({activePanel: \"guides\"})\n    }\n    render() {\n        return (\n            <View id={this.props.id} activePanel={this.state.activePanel}>\n                <Panel id={\"guides\"}>\n                    <PanelHeader>Гайды</PanelHeader>\n                    {\n                        galleries.map(\n                            (item, idx) => <GalleryItem key={idx} guides={item.guides} title={item.title}\n                                                   onClick={(idx) => this.handleGuideClick(idx)}/>\n                        )\n                    }\n                </Panel>\n\n                <GuideReader id={'reading'} guideID={this.currGuide} backClick={this.handleBackClick}/>\n            </View>\n        );\n    }\n}\n\nGuides.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n\n\nexport default Guides;","import React from 'react';\nimport For from 'react';\nimport PropTypes from 'prop-types';\nimport {PanelHeaderBack, Input, Panel, PanelHeader, HeaderButton, Search, Group, Footer, List, Cell, View, FixedLayout} from '@vkontakte/vkui';\nimport {Clusterer, ListBoxItem, ListBox, YMaps, Map, Placemark } from 'react-yandex-maps';\nimport '../styles/main.css';\n\nimport pointsPlastic from \"./data/pointPlastic.json\"\nimport pointsPapes from \"./data/pointsPapes.json\"\nimport pointsGlases from \"./data/pointsGlases.json\"\n\nimport img_plastik from \"../imgs/plastik.png\"\nimport img_paper from \"../imgs/bumaga.png\"\nimport img_glas from \"../imgs/steklo.png\"\n\nimport { tsConstructSignatureDeclaration } from '@babel/types';\n\nconst img_size = [60, 80];\nconst img_offset = [30, -80];\n\nexport default class MyMap extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            id: props.id,\n            isPlastic: false,\n            isPaper: false,\n            isGlases: false,\n            buffer : []\n        }\n        this.changeSearch = this.changeSearch.bind(this);\n        this.getPointDataForGlases = this.getPointDataForGlases.bind(this);\n        this.getPointDataForPaper = this.getPointDataForPaper.bind(this);\n        this.getPointDataForPlastic = this.getPointDataForPlastic.bind(this);\n\n        this.getPointOptionsForGlases = this.getPointOptionsForGlases.bind(this);\n        this.getPointOptionsForPaper = this.getPointOptionsForPaper.bind(this);\n        this.getPointOptionsForPlastic = this.getPointOptionsForPlastic.bind(this);\n    }\n\n    getPointDataForPlastic() {\n        return {\n            hintContent: \"Дом пластика\"\n        };\n    };\n    getPointDataForPaper() {\n        return {\n            balloonContent: \"Дом бумаги\"\n        };\n    };\n    getPointDataForGlases() {\n        return {\n            balloonContent: \"Время и стекло\"\n        };\n    };\n\n    getPointOptionsForPlastic() {\n        return {\n            iconLayout: 'default#image',\n            iconImageHref: img_plastik,\n            iconImageSize: img_size,\n            iconImageOffset: img_offset\n        };\n    };\n    getPointOptionsForPaper() {\n        return {\n            iconLayout: 'default#image',\n            iconImageHref: img_paper,\n            iconImageSize: img_size,\n            iconImageOffset: img_offset\n        };\n    };\n    getPointOptionsForGlases() {\n        return {\n            iconLayout: 'default#image',\n            iconImageHref: img_glas,\n            iconImageSize: img_size,\n            iconImageOffset: img_offset\n        };\n    };\n\n    changeSearch(prop) {\n        if (prop === \"plastic\") {\n            let notPlasitc = !this.state.isPlastic;\n            this.setState({isPlastic: notPlasitc});\n        }\n        if (prop === \"paper\") {\n            let notPaper = !this.state.isPaper;\n            this.setState({isPaper: notPaper});\n        }\n        if (prop === \"glases\") {\n            let notGlases = !this.state.isGlases;\n            this.setState({isGlases: notGlases});\n        }\n\n        this.changeMap();\n    }\n\n    printFromJson(j, properties, options) {\n        console.log(options);\n        return (j.map((coordinates, idx) => (\n            <Placemark\n              key={idx}\n              geometry={ [coordinates[0], coordinates[1]] }\n              properties={properties}\n              options={options}\n            />\n          )\n        )\n        )\n    }\n\n    printPlacemark() {\n        return ( <div>\n            { this.state.isPlastic && this.printFromJson(pointsPlastic, this.getPointDataForPlastic(), this.getPointOptionsForPlastic())}\n            { this.state.isPaper && this.printFromJson(pointsPapes, this.getPointDataForPaper(), this.getPointOptionsForPaper())}\n            { this.state.isGlases && this.printFromJson(pointsGlases, this.getPointDataForGlases(), this.getPointOptionsForGlases())}\n            </div>\n            );\n    }\n\n    changeMap() {\n        \n    }\n\n    render() {\n        return (\n            <View id={this.state.id} activePanel=\"mymap\">\n                <Panel id=\"mymap\">\n                    <PanelHeader>Карта </PanelHeader>\n                    <FixedLayout vertical=\"top bottom\">\n                        <YMaps>\n                                <Map className=\"all_window\"\n                                    defaultState = {{ \n                                        center: [55.753215, 37.622504], \n                                    zoom: 10\n                                        }}\n                                >\n                                    <ListBox data = {{ content: \"Что относим на свалку?\" }}>\n                                        <ListBoxItem onClick={() => this.changeSearch(\"plastic\")} data = {{ content: \"Пластик\" }} />\n                                        <ListBoxItem onClick={() => this.changeSearch(\"paper\")} data = {{ content: \"Бумагу\" }} />\n                                        <ListBoxItem onClick={() => this.changeSearch(\"glases\")} data = {{ content: \"Стекло\" }} />\n                                    </ListBox>\n\n                                    <Clusterer\n                                        options={{\n                                            preset: 'islands#blackClusterIcons',\n                                            // iconColor: \"#12f9ab\",\n                                            groupByCoordinates: false,\n                                            clusterDisableClickZoom: true,\n                                            clusterHideIconOnBalloonOpen: false,\n                                            geoObjectHideIconOnBalloonOpen: false\n                                        }}\n                                    >\n                                        {this.printPlacemark()}\n                                    </Clusterer>\n                                </Map>\n                        </YMaps>\n                    </FixedLayout>\n                </Panel>\n            </View>\n        );\n    }\n};","import React from 'react';\nimport {View, Panel, Root, Epic, Tabbar, TabbarItem, PanelHeader} from '@vkontakte/vkui'\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Place from '@vkontakte/icons/dist/28/place';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\n\nimport ProgressPage from './views/ProgressPage';\nimport Helper from './views/Helper';\nimport Guides from './views/Guides';\nimport MyMap from './views/MyMap';\n\nimport \"./styles/main.css\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeStory: 'progress',\n            callBackYmaps: {}\n        };\n        this.onStoryChange = this.onStoryChange.bind(this);\n    }\n\n    onStoryChange(entity) {\n        this.setState({activeStory: entity.currentTarget.dataset.story})\n    }\n\n    render() {\n        return (\n            <Epic activeStory={this.state.activeStory} tabbar={\n                <Tabbar>\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'progress'}\n                        data-story=\"progress\"\n                        text=\"Прогрес\"\n                    ><Icon28ArticleOutline/></TabbarItem>\n                    {/*<TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'helper'}\n                        data-story=\"helper\"\n                        text=\"Помощник\"\n                    ><Icon28Search/></TabbarItem>*/}\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'guides'}\n                        data-story=\"guides\"\n                        text=\"Гайды\"\n                    ><Icon28Newsfeed/></TabbarItem>\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'mymap'}\n                        data-story=\"mymap\"\n                        text=\"Карта\"\n                    ><Icon28Place/></TabbarItem>\n                </Tabbar>\n            }>\n                <ProgressPage id=\"progress\"/>\n                <Helper id=\"helper\"/>\n                <Guides id=\"guides\"/>\n                <MyMap id=\"mymap\"/>\n            </Epic>\n        )\n    }\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}