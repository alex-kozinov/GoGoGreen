{"version":3,"sources":["imgs/turtle.png","constants/images/Nachalo.png","constants/images/ojidanie.png","constants/images/realnost.png","constants/images/plastic1.png","constants/images/plastic2.png","constants/images/plastic3.png","constants/images/plastic4.png","constants/images/plastic5.png","constants/images/plastic6.png","constants/images/plastic7.png","imgs/akinator.png","imgs/plastik.png","imgs/bumaga.png","imgs/steklo.png","constants/images/default.jpg","components/questpannel/index.jsx","constants/index.jsx","panels/guidereader/index.jsx","views/ProgressPage.jsx","components/akinator/index.jsx","views/Helper.jsx","components/galaryitem/galaryitem.jsx","views/Guides.jsx","views/MyMap.jsx","App.js","index.js"],"names":["module","exports","QuestPanel","props","osname","platform","mem","getMem","state","allProgress","contextOpened","mode","setMem","bind","toggleContext","select","getProgress","handleClick","newMem","updateState","updated","x","this","setState","e","currentTarget","dataset","requestAnimationFrame","progress","maxProgress","startPorgress","currMode","Math","min","updatedProps","activePanel","id","aside","onClick","opened","onClose","asideContent","fill","data-mode","style","height","width","align","margin","marginTop","marginBottom","window","outerWidth","outerHeight","src","cherepahen","marginLeft","marginRight","title","value","level","size","React","Component","guides","image","Nachalo","article","className","ogidanie","realnost","plastic1","plastic2","plastic3","plastic4","plastic5","plastic6","plastic7","galleries","GuideReader","left","backClick","IOS","addon","guideID","ProgressPage","handleBackClick","getGuideID","Akinator","clasName","akinator","Helper","GalleryItem","slideWidth","map","idx","padding","alt","Guides","currGuide","handleGuideClick","guideNumber","item","key","img_size","img_offset","MyMap","isPlastic","isPaper","isGlases","buffer","changeSearch","getPointDataForGlases","getPointDataForPaper","getPointDataForPlastic","getPointOptionsForGlases","getPointOptionsForPaper","getPointOptionsForPlastic","hintContent","balloonContent","iconLayout","iconImageHref","img_plastik","iconImageSize","iconImageOffset","img_paper","img_glas","prop","notPlasitc","notPaper","notGlases","changeMap","j","properties","options","console","log","coordinates","geometry","printFromJson","pointsPlastic","pointsPapes","pointsGlases","vertical","defaultState","center","zoom","data","content","preset","groupByCoordinates","clusterDisableClickZoom","clusterHideIconOnBalloonOpen","geoObjectHideIconOnBalloonOpen","printPlacemark","App","activeStory","callBackYmaps","startProgress","onStoryChange","entity","story","tabbar","selected","data-story","text","connect","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11f2d1fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/turtle.178654c9.png\";","module.exports = __webpack_public_path__ + \"static/media/Nachalo.0cbb5047.png\";","module.exports = __webpack_public_path__ + \"static/media/ojidanie.a83d4bf2.png\";","module.exports = __webpack_public_path__ + \"static/media/realnost.5a007e69.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic1.222e6fb7.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic2.a6d2d7be.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic3.d32defd1.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic4.4319b63a.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic5.d75df780.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic6.3b6b18ce.png\";","module.exports = __webpack_public_path__ + \"static/media/plastic7.d0e0a3d8.png\";","module.exports = __webpack_public_path__ + \"static/media/akinator.49982d5a.png\";","module.exports = __webpack_public_path__ + \"static/media/plastik.68fc34b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bumaga.4552e1db.png\";","module.exports = __webpack_public_path__ + \"static/media/steklo.807c9cb0.png\";","module.exports = __webpack_public_path__ + \"static/media/default.b79a8f2d.jpg\";","import React from 'react';\nimport {\n    Panel,\n    Cell,\n    List,\n    PanelHeader,\n    Group,\n    Div,\n    InfoRow,\n    Progress,\n    Button,\n    FixedLayout,\n    FormLayout,\n    HeaderContext,\n    PanelHeaderContent,\n    HeaderButton,\n    IOS,\n    platform\n} from '@vkontakte/vkui';\nimport PropTypes from \"prop-types\";\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\nimport cherepahen from '../../imgs/turtle.png'\n\n\nclass QuestPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.osname = platform();\n\n        let mem = this.props.getMem();\n\n        this.state = {\n            allProgress: mem.allProgress,\n            contextOpened: false,\n            mode: mem.mode\n        };\n\n        this.setMem = this.setMem.bind(this);\n        this.toggleContext = this.toggleContext.bind(this);\n        this.select = this.select.bind(this);\n        this.getProgress = this.getProgress.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n\n    setMem(newMem) {\n        let updateState = {};\n        let updated = false;\n        for (let x in newMem) {\n            if (x in this.state) {\n                updateState[x] = newMem[x];\n                updated = true;\n            }\n        }\n\n        this.props.setMem(newMem);\n\n        if (updated) {\n            this.setState(updateState);\n        }\n    }\n\n    toggleContext() {\n        this.setState({contextOpened: !this.state.contextOpened});\n    }\n\n    select(e) {\n        const mode = e.currentTarget.dataset.mode;\n\n        this.setMem({mode: mode});\n\n        requestAnimationFrame(this.toggleContext);\n    }\n\n    getProgress() {\n        let mem = this.props.getMem();\n        let mode = mem['mode'];\n        let progress = mem['allProgress'][mode];\n        let maxProgress = mem['maxProgress'][mode];\n        let startPorgress = mem['startProgress'][mode];\n\n        return 100 * (progress - startPorgress) / (maxProgress - startPorgress)\n    }\n\n    handleClick() {\n        let mem = this.props.getMem();\n        let currMode = mem.mode;\n        let allProgress = mem.allProgress;\n        let maxProgress = mem.maxProgress[currMode];\n        allProgress[currMode] = Math.min(allProgress[currMode] + 1, maxProgress);\n        let updatedProps = {\n            activePanel: \"reading\",\n            allProgress: allProgress,\n            mode: currMode\n        };\n\n        this.setMem(updatedProps);\n    }\n\n    render() {\n        return <Panel id={this.props.id}>\n            <PanelHeader>\n                <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\n                    {this.state.mode === 'plastic' ? 'Пластик' : 'Введение'}\n                </PanelHeaderContent>\n            </PanelHeader>\n            <HeaderContext opened={this.state.contextOpened} onClose={this.toggleContext}>\n                <List>\n                    <Cell\n                        asideContent={this.state.mode === \"intro\" ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                        onClick={this.select}\n                        data-mode=\"intro\"\n                    >\n                        Введение\n                    </Cell>\n                    <Cell\n                        asideContent={this.state.mode === \"plastic\" ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                        onClick={this.select}\n                        data-mode=\"plastic\"\n                    >\n                        Пластик\n                    </Cell>\n\n                </List>\n            </HeaderContext>\n            <div\n                style={{height: '40vh', width: '80vw', align: 'center', margin: 'auto', marginTop: '5vh', marginBottom: '5vh'}}\n                align='center'>\n                {window.outerWidth > window.outerHeight ?\n                    <img src={cherepahen} style={{height: '100%', width: 'auto'}}/>\n                    :\n                    <img src={cherepahen} style={{height: 'auto', width: '100%'}}/>\n                }\n            </div>\n            <Div style={{marginLeft: '10vw', marginRight: '10vw'}}>\n                <InfoRow title=\"Прогресс озеленения\">\n                    <Progress value={this.getProgress()}/>\n                </InfoRow>\n            </Div>\n            <Div align='center'>\n                <Button level=\"outline\" size='xl' style={{marginTop: '10vh'}} onClick={this.handleClick}>\n                    Go\n                </Button>\n            </Div>\n\n        </Panel>\n    }\n}\n\nQuestPanel.propTypes = {\n    id: PropTypes.string.isRequired,\n    getMem: PropTypes.func.isRequired,\n    setMem: PropTypes.func.isRequired,\n};\n\nexport default QuestPanel;","import defaultImage from './images/default.jpg';\nimport Nachalo from './images/Nachalo.png';\nimport ogidanie from './images/ojidanie.png'\nimport realnost from './images/realnost.png'\nimport plastic1 from './images/plastic1.png'\nimport plastic2 from './images/plastic2.png'\nimport plastic3 from './images/plastic3.png'\nimport plastic4 from './images/plastic4.png'\nimport plastic5 from './images/plastic5.png'\nimport plastic6 from './images/plastic6.png'\nimport plastic7 from './images/plastic7.png'\n\nimport React from 'react';\nimport '../styles/main.css'\n\nexport const guides = [\n    {\n        id: 0,\n        title: \"GoGreen.Начало\",\n        image: Nachalo,\n        article: <div className=\"context\"> \n            Пластиковая бутылка или упаковка от питьевого йогурта может\n            закончить свой жизненный путь тремя способами. \n            <br/>\n            <br/>\n            Первый - это\n            разлагаться в лесу или плавать в океане. На то, чтобы\n            исчезнуть, ей потребуется 100 - 400 лет. Чуть меньше вреда\n            она причинит, если попадет на свалку. Есть еще один вариант:\n            она может отправиться на переработку и стать новой вещью.\n            Некоторое количество мусора на свалке сжигают. Но при\n            сжигании пластик выделяет токсичные для людей и животных\n            вещества.\n            <br/>\n            <br/>\n            При этом объемы производства пластика пугают: каждую\n            минуту покупают 1 миллион пластиковых бутылок. В 2016 году\n            было продано 480 миллиардов бутылок. И только половина из\n            них ушла на переработку.\n            <br/>\n            <br/>\n            Звучит как повод начать что-то менять? :) \n        </div>,\n    },\n    {\n        id: 1,\n        title: \"GoGreen.Ожидание\",\n        image: ogidanie,\n        article: <div  className=\"context\">\n            Сразу обсудим несколько моментов.\n            <br/>\n            <br/>\n            Первое правило клуба переработки пластика: никакое изделие\n            не может быть переработано в такое же изделие. С каждым\n            циклом переработки качество материала будет снижаться, и\n            обязательно наступит момент, когда изделие может быть лишь\n            отправлено на свалку.\n            <br/>\n            <br/>\n            Второе: люди пока не научились перерабатывать абсолютно\n            все.\n            <br/>\n            <br/>\n            Неочевидно, но факт: переработке не подлежат фантики,\n            оберточная и упаковочная бумага, бумажные стаканчики,\n            кассовые чеки и салфетки. Подробнее обо всех типахнеперерабатываемых отходов и о причинах, по которым они не\n            перерабатываются, можно прочитать в следующих гайдах.\n            <br/>\n            <br/>\n            Третье правило: это похоже на любовь. На любовь к планете.\n            Поэтому мы не только сортируем мусор, но еще и моем всю\n            тару перед тем, как ее сдавать. Почему? Потому что если\n            заняться этим сразу, то все частички пищи можно отмыть\n            меньшим количеством воды и с меньшими усилиями. На\n            производстве на это может тратиться слишком много воды, что,\n            само собой, очень плохо для экологии.\n            <br/>\n            <br/>\n            А еще нужно отделять крышечки от самих бутылок (потому что\n            это разные типы пластика) и сжимать бутылки, чтобы они\n            занимали меньше места сначала в вашем контейнере, а потом\n            и в мусоровозе (так в него влезет еще больше бутылок и\n            понадобится делать меньше рейсов, то есть, это экономит\n            бензин).\n        </div>,\n    },\n    {\n        id: 2,\n        title: \"GoGreen.Реальность\",\n        image: realnost,\n        article: <div className=\"context\">\n            Нет больше сил читать рассуждения на тему экологии?\n            Перейдем к практике!\n            <br/>\n            <br/>\n            Итак, время совершить маленький шажок для человека, но\n            большой шаг для человечества, и разобраться с маркировками\n            пластика.\n            <br/>\n            <br/>\n            Маркировка обозначается треугольником с цифрой внутри.\n            <br/>\n            <br/>\n            Также там может быть буквенный шифр. Цифры могут быть от 1\n            до 7. Они соответствуют следующим видам пластмасс:\n            полиэтилентерефталат — PETЕ (1);высокоплотный полиэтилен — PEHD или HDPE (2);\n            поливинилхлорид — PVC (3);\n            низкоплотный полиэтилен — LDPE или PEBD (4);\n            полипропилен — PP (5);\n            полистирол — PS (6);\n            все другие виды пластика — OTHER – O (7).\n            <br/>\n            <br/>\n            Пластмассу с маркировкой 1, 2, 4, 5, 6 можно сдать в пункты\n            приёма вторсырья.\n            <br/>\n            <br/>\n            Большинство точек без проблем принимает отходы с отметкой\n            1, 2.\n            <br/>\n            <br/>\n            А вот с изделиями под цифрами 4, 5, 6 могут возникнуть\n            сложности.\n        </div>,\n    },\n    {\n        id: 3,\n        title: \"GoGreen.Пластик 1\",\n        image: plastic1,\n        article: <div className=\"context\">\n            Большая часть пластиковых отходов — PETЕ-тары: бутылки из\n            под воды, соков, молока, упаковка техники и т.д. Это изделия с\n            маркировкой 1.\n            <br/>\n            <br/>\n            Они наиболее ценны для переработки.Такой пластик используется для разлива прохладительных\n            напитков, кетчупов, растительного масла, косметики и прочего.\n            <br/>\n            <br/>\n            Производство данного вида пластика не требует особых затрат,\n            этим и обусловлена его популярность. Использовать его можно\n            лишь раз, потому что при повторном использовании бутылка\n            или коробка выделяет опасное вещество – фталат.\n            <br/>\n            <br/>\n            Поддается переработке, один из самых безопасных видов.\n        </div>,\n    },\n    {\n        id: 4,\n        title: \"GoGreen.Пластик 2\",\n        image: plastic2,\n        article: <div className=\"context\">\n            HDPE или PE HD – это полиэтилен высокой плотности.\n            <br/>\n            <br/>\n            Он относительно недорогой и устойчив к температурным\n            воздействиям.\n            <br/>\n            <br/>\n            Такой пластик используется при изготовлении пластиковых\n            пакетов, одноразовой посуды, пищевых контейнеров, пакетов\n            для молока и тары для моющих и чистящих средств.\n            <br/>\n            <br/>\n            Относительно безопасен, хотя может выделять формальдегид.\n            Поддается переработке, годен для вторичного использования.\n        </div>,\n    },\n    {\n        id: 5,\n        title: \"GoGreen.Пластик 3\",\n        image: plastic3,\n        article: <div className=\"context\">\n            PVC или V — поливинилхлорид.\n            <br/>\n            <br/>\n            Этот вид пластика используется в технических целях. К\n            <br/>\n            <br/>\n            примеру, для изготовления пластиковых окон, элементов\n            мебели, труб, скатертей, тары для технической жидкости и\n            прочего.\n            <br/>\n            <br/>\n            Противопоказан для пищевого использования.\n            <br/>\n            <br/>\n            Пластик содержит бисфенол А, винилхлорид, фталаты, а также\n            может содержать кадмий.Один из самых опасных видов пластмассы. При сжигании\n            выделяет в воздух очень опасные яды — канцерогенные\n            диоксины\n        </div>,\n    },\n    {\n        id: 6,\n        title: \"GoGreen.Пластик 4\",\n        image: plastic4,\n        article: <div className=\"context\">\n            LDPE или PEBD – полиэтилен низкой плотности.\n            <br/>\n            <br/>\n            Обществу известен по пакетам, мусорным мешкам,\n            компакт-дискам и линолеуму.\n            <br/>\n            <br/>\n            Довольно широкое распространение данного типа обусловлено\n            его дешевизной.\n            <br/>\n            <br/>\n            ПЭТ-пакеты для организма человека практически безопасны\n            (однако не забывайте об их влиянии на окружающую среду).\n            <br/>\n            <br/>\n            В редких случаях выделяет формальдегид.\n            Поддается переработке и вторичному использованию.\n        </div>,\n    },\n    {\n        id: 7,\n        title: \"GoGreen.Пластик 5\",\n        image: plastic5,\n        article: <div className=\"context\">\n            PP – полипропилен.\n            <br/>\n            <br/>\n            Прочный и термостойкий. Из него изготавливают пищевые\n            контейнеры, шприцы и детские игрушки.\n            <br/>\n            <br/>\n            Сравнительно безопасен, но при некоторых обстоятельствах\n            может выделять формальдегид.\n        </div>,\n    },\n    {\n        id: 8,\n        title: \"GoGreen.Пластик 6\",\n        image: plastic6,\n        article: <div className=\"context\">\n            PS – полистирол.\n            <br/>\n            <br/>\n            Этот тип пластика вы встретите в мясном или молочном отделе.Из него сделаны стаканчики для йогурта, мясные лоточки,\n            коробочки под овощи и фрукты, сэндвич-панели и\n            теплоизоляционные плиты.\n            <br/>\n            <br/>\n            При повторном использовании выделяет стирол, который\n            является канцерогеном.\n            <br/>\n            <br/>\n            Специалисты рекомендуют по возможности отказаться от\n            использования данного вида пластика или сократить его\n            потребление к минимуму.\n        </div>,\n    },\n    {\n        id: 9,\n        title: \"GoGreen.Пластик 7\",\n        image: plastic7,\n        article: <div className=\"context\">\n            O или OTHER – поликарбонат, полиамид и другие виды\n            пластмасс.\n            <br/>\n            <br/>\n            В данную группу входят пластмассы, не получившие отдельный\n            номер. Из них изготавливаются бутылочки для детей, игрушки,\n            бутылки для воды, упаковки.\n            <br/>\n            <br/>\n            При частом мытье или нагревании выделяет бисфенол А —\n            вещество, которое ведет к гормональным сбоям в организме\n            человека.\n        </div>,\n    },\n];\n\nexport const galleries = [\n    {\n        title: 'Введение',\n        guides: [0, 1, 2],\n    },\n    {\n        title: 'Пластик',\n        guides: [3, 4, 5, 6, 7, 8, 9],\n    }\n];","import React from 'react';\nimport {HeaderButton, IOS, Panel, PanelHeader} from \"@vkontakte/vkui\";\nimport {guides} from \"../../constants\";\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport PropTypes from \"prop-types\";\n\n\nclass GuideReader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Panel id={\"reading\"}>\n            <PanelHeader\n                left=\n                    {\n                        <HeaderButton onClick={this.props.backClick}>\n                            {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                        </HeaderButton>\n                    }\n                addon=\n                    {\n                        <HeaderButton onClick={this.props.backClick}>\n                            Назад\n                        </HeaderButton>\n                    }\n            >\n                {\n                    guides[this.props.guideID].title\n                }\n            </PanelHeader>\n            {\n                guides[this.props.guideID].article\n            }\n        </Panel>\n    }\n}\n\nGuideReader.propTypes = {\n    id: PropTypes.string.isRequired,\n    guideID: PropTypes.number.isRequired,\n    backClick: PropTypes.func.isRequired\n};\n\nexport default GuideReader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormLayout, Button, Tabs, TabsItem, FixedLayout, Div, InfoRow, Panel, PanelHeader,  Group, View, Progress} from '@vkontakte/vkui';\nimport QuestPanel from \"../components/questpannel\";\nimport GuideReader from \"../panels/guidereader\";\n\n\nclass ProgressPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let mem = this.props.getMem();\n\n        this.state = {\n            activePanel: mem.activePanel\n        };\n\n        this.setMem = this.setMem.bind(this);\n        this.handleBackClick = this.handleBackClick.bind(this);\n        this.getGuideID = this.getGuideID.bind(this)\n    }\n\n    setMem(newMem) {\n        let updateState = {};\n        let updated = false;\n        for (let x in newMem) {\n            if (x in this.state) {\n                updateState[x] = newMem[x];\n                updated = true;\n            }\n        }\n\n        this.props.setMem(newMem);\n\n        if (updated) {\n            this.setState(updateState);\n        }\n    }\n\n    getGuideID() {\n        let mem = this.props.getMem();\n        let progress = mem['allProgress'];\n        let mode = mem['mode'];\n        return progress[mode];\n    }\n\n    handleBackClick() {\n        this.setMem({activePanel: 'progress'})\n    }\n\n    render() {\n        return <View id={this.props.id} activePanel={this.state.activePanel}>\n        <QuestPanel id={'progress'} getMem={this.props.getMem} setMem={this.setMem}/>\n        <GuideReader id={'reading'} guideID={this.getGuideID() - 1} backClick={this.handleBackClick}/>\n        </View>\n    }\n}\n\nProgressPage.propTypes = {\n    id: PropTypes.string.isRequired,\n    getMem: PropTypes.func.isRequired,\n    setMem: PropTypes.func.isRequired,\n};\n\nexport default ProgressPage;","import React from 'react';\nimport  \"./styles.css\";\nimport \"../../styles/main.css\"\nimport akinator from '../../imgs/akinator.png';\n\n\nexport class Akinator extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <table className={'all_window'}>\n                <tr className={'upper-side'}>\n                    <div className={'top-container'}>\n                        <div className={'text-box'}>\n                            <div clasName={'text-styles dialog-colors'}>\n                                Привет!\n                            </div>\n                        </div>\n                        <div className={'image-box'}>\n                            <img src={akinator} className={'akinator-position'}/>\n                        </div>\n                    </div>\n\n                </tr>\n                <tr className={'lower-side'}>\n                    <div className={'relative-test'}>\n                        <div className={'test'}/>\n                    </div>\n                </tr>\n            </table>\n        );\n    }\n}\n\nexport default Akinator;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, Search, Group, Footer, List, Cell, View} from '@vkontakte/vkui';\nimport Akinator from \"../components/akinator\";\n\n\nconst Helper = props => (\n    <View id={props.id} activePanel=\"helper\">\n        <Panel id=\"helper\">\n            <PanelHeader>Помощник</PanelHeader>\n            <Akinator/>\n        </Panel>\n    </View>\n);\n\nHelper.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n\n\nexport default Helper;","import React from 'react';\nimport './styles.css';\nimport {Panel, Cell, List, PanelHeader, Group, Div, Gallery} from '@vkontakte/vkui';\nimport {guides} from \"../../constants\";\n\nexport class GalleryItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Group title={this.props.title}>\n                <Gallery\n                    align='left'\n                    slideWidth='custom'\n                    style={{height: 'auto'}}\n                >\n                    {\n                        this.props.guides.map(\n                            (idx) =>\n                                <div style={{padding: '2px', width: '20vh'}}>\n                                    <img src={guides[idx].image} style={{width: '100%'}}\n                                         alt='guide image' onClick={() => this.props.onClick(guides[idx].id)}/>\n                                </div>\n                        )\n                    }\n                </Gallery>\n            </Group>)\n    }\n}\n\nexport default GalleryItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Panel,\n    PanelHeader,\n    HeaderButton,\n    View,\n    IOS,\n    platform\n} from '@vkontakte/vkui';\n\nimport GalleryItem from \"../components/galaryitem/galaryitem\";\nimport GuideReader from \"../panels/guidereader\";\nimport {galleries, guides} from \"../constants\";\n\n\nexport class Guides extends React.Component {\n    constructor(props) {\n        super(props);\n        this.osname = platform();\n        this.state = {\n            activePanel: \"guides\",\n        };\n        this.currGuide = 0;\n\n        this.handleGuideClick = this.handleGuideClick.bind(this);\n        this.handleBackClick = this.handleBackClick.bind(this);\n    }\n\n    handleGuideClick(guideNumber) {\n        this.setState({activePanel: 'reading'});\n        this.currGuide = guideNumber;\n    }\n\n    handleBackClick() {\n        this.setState({activePanel: \"guides\"})\n    }\n    render() {\n        return (\n            <View id={this.props.id} activePanel={this.state.activePanel}>\n                <Panel id={\"guides\"}>\n                    <PanelHeader>Гайды</PanelHeader>\n                    {\n                        galleries.map(\n                            (item, idx) => <GalleryItem key={idx} guides={item.guides} title={item.title}\n                                                   onClick={(idx) => this.handleGuideClick(idx)}/>\n                        )\n                    }\n                </Panel>\n\n                <GuideReader id={'reading'} guideID={this.currGuide} backClick={this.handleBackClick}/>\n            </View>\n        );\n    }\n}\n\nGuides.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n\n\nexport default Guides;","import React from 'react';\nimport For from 'react';\nimport PropTypes from 'prop-types';\nimport {PanelHeaderBack, Input, Panel, PanelHeader, HeaderButton, Search, Group, Footer, List, Cell, View, FixedLayout} from '@vkontakte/vkui';\nimport {Clusterer, ListBoxItem, ListBox, YMaps, Map, Placemark } from 'react-yandex-maps';\nimport '../styles/main.css';\n\nimport pointsPlastic from \"./data/pointPlastic.json\"\nimport pointsPapes from \"./data/pointsPapes.json\"\nimport pointsGlases from \"./data/pointsGlases.json\"\n\nimport img_plastik from \"../imgs/plastik.png\"\nimport img_paper from \"../imgs/bumaga.png\"\nimport img_glas from \"../imgs/steklo.png\"\n\nimport { tsConstructSignatureDeclaration } from '@babel/types';\n\nconst img_size = [60, 80];\nconst img_offset = [30, -80];\n\nexport default class MyMap extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            id: props.id,\n            isPlastic: false,\n            isPaper: false,\n            isGlases: false,\n            buffer : []\n        }\n        this.changeSearch = this.changeSearch.bind(this);\n        this.getPointDataForGlases = this.getPointDataForGlases.bind(this);\n        this.getPointDataForPaper = this.getPointDataForPaper.bind(this);\n        this.getPointDataForPlastic = this.getPointDataForPlastic.bind(this);\n\n        this.getPointOptionsForGlases = this.getPointOptionsForGlases.bind(this);\n        this.getPointOptionsForPaper = this.getPointOptionsForPaper.bind(this);\n        this.getPointOptionsForPlastic = this.getPointOptionsForPlastic.bind(this);\n    }\n\n    getPointDataForPlastic() {\n        return {\n            hintContent: \"Дом пластика\"\n        };\n    };\n    getPointDataForPaper() {\n        return {\n            balloonContent: \"Дом бумаги\"\n        };\n    };\n    getPointDataForGlases() {\n        return {\n            balloonContent: \"Время и стекло\"\n        };\n    };\n\n    getPointOptionsForPlastic() {\n        return {\n            iconLayout: 'default#image',\n            iconImageHref: img_plastik,\n            iconImageSize: img_size,\n            iconImageOffset: img_offset\n        };\n    };\n    getPointOptionsForPaper() {\n        return {\n            iconLayout: 'default#image',\n            iconImageHref: img_paper,\n            iconImageSize: img_size,\n            iconImageOffset: img_offset\n        };\n    };\n    getPointOptionsForGlases() {\n        return {\n            iconLayout: 'default#image',\n            iconImageHref: img_glas,\n            iconImageSize: img_size,\n            iconImageOffset: img_offset\n        };\n    };\n\n    changeSearch(prop) {\n        if (prop === \"plastic\") {\n            let notPlasitc = !this.state.isPlastic;\n            this.setState({isPlastic: notPlasitc});\n        }\n        if (prop === \"paper\") {\n            let notPaper = !this.state.isPaper;\n            this.setState({isPaper: notPaper});\n        }\n        if (prop === \"glases\") {\n            let notGlases = !this.state.isGlases;\n            this.setState({isGlases: notGlases});\n        }\n\n        this.changeMap();\n    }\n\n    printFromJson(j, properties, options) {\n        console.log(options);\n        return (j.map((coordinates, idx) => (\n            <Placemark\n              key={idx}\n              geometry={ [coordinates[0], coordinates[1]] }\n              properties={properties}\n              options={options}\n            />\n          )\n        )\n        )\n    }\n\n    printPlacemark() {\n        return ( <div>\n            { this.state.isPlastic && this.printFromJson(pointsPlastic, this.getPointDataForPlastic(), this.getPointOptionsForPlastic())}\n            { this.state.isPaper && this.printFromJson(pointsPapes, this.getPointDataForPaper(), this.getPointOptionsForPaper())}\n            { this.state.isGlases && this.printFromJson(pointsGlases, this.getPointDataForGlases(), this.getPointOptionsForGlases())}\n            </div>\n            );\n    }\n\n    changeMap() {\n        \n    }\n\n    render() {\n        return (\n            <View id={this.state.id} activePanel=\"mymap\">\n                <Panel id=\"mymap\">\n                    <PanelHeader>Карта </PanelHeader>\n                    <FixedLayout vertical=\"top bottom\">\n                        <YMaps>\n                                <Map className=\"all_window\"\n                                    defaultState = {{ \n                                        center: [55.753215, 37.622504], \n                                    zoom: 10\n                                        }}\n                                >\n                                    <ListBox data = {{ content: \"Что относим на свалку?\" }}>\n                                        <ListBoxItem onClick={() => this.changeSearch(\"plastic\")} data = {{ content: \"Пластик\" }} />\n                                        <ListBoxItem onClick={() => this.changeSearch(\"paper\")} data = {{ content: \"Бумагу\" }} />\n                                        <ListBoxItem onClick={() => this.changeSearch(\"glases\")} data = {{ content: \"Стекло\" }} />\n                                    </ListBox>\n\n                                    <Clusterer\n                                        options={{\n                                            preset: 'islands#blackClusterIcons',\n                                            // iconColor: \"#12f9ab\",\n                                            groupByCoordinates: false,\n                                            clusterDisableClickZoom: true,\n                                            clusterHideIconOnBalloonOpen: false,\n                                            geoObjectHideIconOnBalloonOpen: false\n                                        }}\n                                    >\n                                        {this.printPlacemark()}\n                                    </Clusterer>\n                                </Map>\n                        </YMaps>\n                    </FixedLayout>\n                </Panel>\n            </View>\n        );\n    }\n};","import React from 'react';\nimport {View, Panel, Root, Epic, Tabbar, TabbarItem, PanelHeader} from '@vkontakte/vkui'\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Place from '@vkontakte/icons/dist/28/place';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\n\nimport ProgressPage from './views/ProgressPage';\nimport Helper from './views/Helper';\nimport Guides from './views/Guides';\nimport MyMap from './views/MyMap';\n\nimport \"./styles/main.css\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.mem = {\n            activeStory: 'progress',\n            callBackYmaps: {},\n            activePanel: \"progress\",\n            mode: \"plastic\",\n            allProgress: {\n                \"plastic\": 3,\n                \"intro\": 0\n            },\n            startProgress: {\n                \"plastic\": 3,\n                \"intro\": 0\n            },\n            maxProgress: {\n                \"plastic\": 10,\n                \"intro\": 3\n            }\n        };\n\n        this.state = {\n            activeStory: 'progress',\n            callBackYmaps: {}\n        };\n\n        this.onStoryChange = this.onStoryChange.bind(this);\n        this.getMem = this.getMem.bind(this);\n        this.setMem = this.setMem.bind(this);\n    }\n\n    getMem() {\n        return this.mem;\n    }\n\n    setMem(newMem) {\n        let updateState = {};\n        let updated = false;\n        for (let x in newMem) {\n            if (x in this.state) {\n                updateState[x] = newMem[x];\n                updated = true;\n            }\n        }\n\n        this.mem = {...this.mem, ...newMem};\n\n        if (updated) {\n            this.setState(updateState);\n        }\n    }\n\n    onStoryChange(entity) {\n        this.setState({activeStory: entity.currentTarget.dataset.story})\n    }\n\n    render() {\n        return (\n            <Epic activeStory={this.state.activeStory} tabbar={\n                <Tabbar>\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'progress'}\n                        data-story=\"progress\"\n                        text=\"Прогрес\"\n                    ><Icon28ArticleOutline/></TabbarItem>\n                    {/*<TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'helper'}\n                        data-story=\"helper\"\n                        text=\"Помощник\"\n                    ><Icon28Search/></TabbarItem>*/}\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'guides'}\n                        data-story=\"guides\"\n                        text=\"Гайды\"\n                    ><Icon28Newsfeed/></TabbarItem>\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory === 'mymap'}\n                        data-story=\"mymap\"\n                        text=\"Карта\"\n                    ><Icon28Place/></TabbarItem>\n                </Tabbar>\n            }>\n                <ProgressPage id=\"progress\" setMem={this.setMem} getMem={this.getMem}/>\n                <Helper id=\"helper\"/>\n                <Guides id=\"guides\"/>\n                <MyMap id=\"mymap\"/>\n            </Epic>\n        )\n    }\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}